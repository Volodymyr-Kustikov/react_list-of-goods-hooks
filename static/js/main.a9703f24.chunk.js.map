{"version":3,"sources":["App.tsx","index.tsx"],"names":["alphabeticallySort","lengthSort","goodsFromServer","App","useState","sortField","setSortField","isReversed","setIsReversed","visibleGoods","sortedGoods","sort","good1","good2","localeCompare","length","reverse","getPreparedItems","className","type","cn","onClick","prev","map","good","ReactDOM","render","document","getElementById"],"mappings":"gPAUMA,EAAqB,WACrBC,EAAa,SAENC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UA8BK,IAAMC,EAAgB,WAC3B,MAAkCC,mBAAiB,IAAnD,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAoCF,oBAAkB,GAAtD,mBAAOG,EAAP,KAAmBC,EAAnB,KACMC,EA9BR,YAEG,IADCJ,EACF,EADEA,UAAWE,EACb,EADaA,WAEPG,EAAW,UAAOR,GAiBxB,OAfIG,GACFK,EAAYC,MAAK,SAACC,EAAOC,GACvB,OAAQR,GACN,KAAKL,EACH,OAAOY,EAAME,cAAcD,GAE7B,KAAKZ,EACH,OAAOW,EAAMG,OAASF,EAAME,OAE9B,QACE,OAAO,MAKXR,EACKG,EAAYM,UAGdN,EAMcO,CACnB,CAAEZ,YAAWE,eAGf,OACE,sBAAKW,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAG,SAAU,UAAW,CACjC,WAAYf,IAAcL,IAE5BqB,QAAS,kBAAMf,EAAaN,IAL9B,iCAUA,wBACEmB,KAAK,SACLD,UAAWE,IAAG,SAAU,aAAc,CACpC,WAAYf,IAAcJ,IAE5BoB,QAAS,kBAAMf,EAAaL,IAL9B,4BAUA,wBACEkB,KAAK,SACLD,UAAWE,IAAG,SAAU,aAAc,CACpC,YAAab,IAEfc,QAAS,WACPb,GAAc,SAAAc,GAAI,OAAKA,MAN3B,sBAYEjB,GAAaE,IAEb,wBACEY,KAAK,SACLD,UAAU,4BACVG,QAAS,WACPf,EAAa,IACbE,GAAc,IALlB,sBAaJ,6BACGC,EAAac,KAAI,SAAAC,GAAI,OACpB,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,YC7GlCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.a9703f24.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport cn from 'classnames';\n\ninterface Methods {\n  sortField: string;\n  isReversed: boolean;\n}\n\nconst alphabeticallySort = 'alphabet';\nconst lengthSort = 'length';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nfunction getPreparedItems(\n  { sortField, isReversed } : Methods,\n) {\n  const sortedGoods = [...goodsFromServer];\n\n  if (sortField) {\n    sortedGoods.sort((good1, good2) => {\n      switch (sortField) {\n        case alphabeticallySort:\n          return good1.localeCompare(good2);\n\n        case lengthSort:\n          return good1.length - good2.length;\n\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (isReversed) {\n    return sortedGoods.reverse();\n  }\n\n  return sortedGoods;\n}\n\nexport const App: React.FC = () => {\n  const [sortField, setSortField] = useState<string>('');\n  const [isReversed, setIsReversed] = useState<boolean>(false);\n  const visibleGoods = getPreparedItems(\n    { sortField, isReversed },\n  );\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn('button', 'is-info', {\n            'is-light': sortField !== alphabeticallySort,\n          })}\n          onClick={() => setSortField(alphabeticallySort)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button', 'is-success', {\n            'is-light': sortField !== lengthSort,\n          })}\n          onClick={() => setSortField(lengthSort)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button', 'is-warning', {\n            'is-light': !isReversed,\n          })}\n          onClick={() => {\n            setIsReversed(prev => !prev);\n          }}\n        >\n          Reverse\n        </button>\n\n        {(sortField || isReversed) && (\n\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={() => {\n              setSortField('');\n              setIsReversed(false);\n            }}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {visibleGoods.map(good => (\n          <li data-cy=\"Good\" key={good}>\n            {good}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}